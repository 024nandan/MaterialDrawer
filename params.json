{"name":"Materialdrawer","tagline":"A simple take on creating a easy to use and fast material drawer implementation","body":"#MaterialDrawer  [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.mikepenz.materialdrawer/library/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.mikepenz.materialdrawer/library) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-MaterialDrawer-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/1526)\r\n\r\nThe **MaterialDrawer** library aims to provide a quick and easy Activity to create and implement a drawer layout in your application.\r\n\r\nHere's a quick overview of functions it include:\r\n- **easy integration**\r\n- quick and simple api\r\n- follows the Google Material Design Guidelines\r\n- modify the colors on the go\r\n- **uses the AppCompat support library**\r\n- comes with a basetheme which helps if you want an activity with a colored statusbar\r\n- the navigationdrawer is also under the statusbar\r\n- compatible down to API Level 14\r\n- **supports multiple drawers**\r\n- comes with multiple default drawer items\r\n- **badge** support\r\n\r\n#Preview\r\n##Demo\r\nYou can try it out here [Google Play](https://play.google.com/store/apps/details?id=com.mikepenz.unsplash) (wall:splash an open source application which uses this drawer implementation)\r\n\r\n##Screenshots\r\n![Image](https://raw.githubusercontent.com/mikepenz/MaterialDrawer/master/DEV/screenshots/screenshot1_small.png)\r\n![Image](https://raw.githubusercontent.com/mikepenz/MaterialDrawer/master/DEV/screenshots/screenshot2_small.png)\r\n\r\n\r\n#Include in your project\r\n##Using Maven\r\nThe MaterialDrawer Library is pushed to [Maven Central](http://search.maven.org/#search|ga|1|g%3A%22com.mikepenz.materialdrawer%22), so you just need to add the following dependency to your `build.gradle`.\r\n\r\n```javascript\r\ncompile('com.mikepenz.materialdrawer:library:0.9.1@aar') {\r\n\ttransitive = true\r\n}\r\n```\r\n\r\n##How to use\r\nHere's a quick overview what you have to do within your application.\r\n\r\n####Activity\r\n#####Code:\r\nIt's (theoretically) a one-liner :D\r\n```java\r\nnew Drawer()\r\n.withActivity(this)\r\n.withToolbar(toolbar)\r\n.withActionBarDrawerToggle(true)\r\n.addDrawerItems(\r\n\tnew PrimaryDrawerItem().withName(R.string.drawer_item_home),\r\n\tnew PrimaryDrawerItem().withName(R.string.drawer_item_free_play),\r\n\tnew PrimaryDrawerItem().withName(R.string.drawer_item_custom),\r\n\tnew SpacerDrawerItem(),\r\n\tnew SecondaryDrawerItem().withName(R.string.drawer_item_settings).withIcon(FontAwesome.Icon.faw_cog),\r\n\tnew SecondaryDrawerItem().withName(R.string.drawer_item_help).withIcon(FontAwesome.Icon.faw_question).setEnabled(false),\r\n\tnew SecondaryDrawerItem().withName(R.string.drawer_item_open_source).withIcon(FontAwesome.Icon.faw_github),\r\n\tnew SecondaryDrawerItem().withName(R.string.drawer_item_contact).withIcon(FontAwesome.Icon.faw_bullhorn)\r\n)\r\n.withOnDrawerItemClickListener(new Drawer.OnDrawerItemClickListener() {\r\n@Override\r\npublic void onItemClick(AdapterView<?> parent, View view, int position, long id, IDrawerItem drawerItem) {\r\n\t// do something with the clicked item :D\r\n}\r\n})\r\n.build();\r\n```\r\n\r\n###AndroidManifest.xml (OPTIONAL)\r\nYou can use the provided theme, this will allow the drawer to display under the statusbar\r\n```xml\r\n  android:theme=\"@style/AppTheme\"\r\n```\r\n\r\n###styles.xml (OPTIONAL)\r\nOverwrite following colors to create a quick custom style for your application\r\n```xml\r\n    <!-- Material SAMPLE DARK colors -->\r\n    <color name=\"material_drawer_primary\">#9C27B0</color>\r\n    <color name=\"material_drawer_primary_dark\">#7B1FA2</color>\r\n    <color name=\"material_drawer_primary_light\">#E1BEE7</color>\r\n    <color name=\"material_drawer_accent\">#00BCD4</color>\r\n    <color name=\"material_drawer_background\">#303030</color>\r\n    <!-- Material SAMPLE DARK text / items colors -->\r\n    <color name=\"material_drawer_icons\">#000</color>\r\n    <color name=\"material_drawer_primary_text\">#FFF</color>\r\n    <color name=\"material_drawer_secondary_text\">#DEDEDE</color>\r\n    <color name=\"material_drawer_hint_text\">#ABABAB</color>\r\n    <color name=\"material_drawer_divider\">#555555</color>\r\n    <!-- Material SAMPLE DARK drawer colors -->\r\n    <color name=\"material_drawer_selected\">#E8E8E8</color>\r\n    <color name=\"material_drawer_selected_text\">#2196F3</color>\r\n```\r\n\r\n#Credits\r\n\r\n- Miros≈Çaw Stanek - [GitHub](https://github.com/frogermcs)\r\n\t- For his InstaMaterial concept and the idea of inflating the drawerLayout [InstaMaterial Concept](http://frogermcs.github.io/InstaMaterial-concept-part-7-navigation-drawer/)\r\n\r\n\r\n#Developed By\r\n\r\n* Mike Penz - http://mikepenz.com - <mikepenz@gmail.com>\r\n\r\n\r\n#License\r\n\r\n    Copyright 2015 Mike Penz\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}